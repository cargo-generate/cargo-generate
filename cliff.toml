[changelog]
# changelog header
header = """# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{% if version -%}\
    ## [{{ version | trim_start_matches(pat="v") }}] {{ timestamp | date(format="%Y-%m-%d") }}

    [{{ version | trim_start_matches(pat="v") }}]: <REPO>/compare/{{ previous.version }}...{{ version }}
{% else -%}
    ## [Unreleased](<REPO>/compare/{{ previous.version }}...HEAD)
{% endif -%}
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""

trim = true

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# process each line of a commit as an individual commit
split_commits = false
commit_preprocessors = [
    { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))" }, # replace issue numbers
]
postprocessors = [
    { pattern = '<REPO>', replace = "https://github.com/cargo-generate/cargo-generate" }, # replace repository URL
]
commit_parsers = [
    { message = "^feat", group = "‚ú® Features" },
    { message = "^fix", group = "ü§ï Fixes" },
    { message = "^doc", group = "üìñ Documentation" },
    { message = "release", skip = true },
    { message = ".*", group = "üõ†Ô∏è Maintenance" },
]
# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false
# filter out the commits that are not matched by commit parsers
filter_commits = false
# regex for matching git tags
tag_pattern = "v[0-9].*"

ignore_tags = ""
topo_order = false
sort_commits = "oldest"
limit_commits = 100
link_parsers = [
    { pattern = "#(\\d+)", href = "https://github.com/cargo-generate/cargo-generate/issues/$1" },
    { pattern = "RFC(\\d+)", text = "ietf-rfc$1", href = "https://datatracker.ietf.org/doc/html/rfc$1" },
]
