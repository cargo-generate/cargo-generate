## references:
# cache: https://github.com/actions/cache/blob/main/examples.md#rust---cargo
# audit: https://github.com/actions-rs/audit-check
# "needs": https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idneeds

name: Build
on:
  push:
    branches: [ '*' ]
    paths-ignore:
      - "**/docs/**"
      - "**.md"
  pull_request:
    branches: [ main ]
  workflow_call:

jobs:
  typos:
    name: typos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: crate-ci/typos@master
        with:
          config: ./typos.toml

  check:
    name: check
    strategy:
      fail-fast: false
      matrix:
        version: [ 'macos-latest', 'ubuntu-latest', 'windows-latest']
    runs-on: ${{ matrix.version }}
    steps:
      - uses: actions/checkout@v3
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v1
      - run: cargo check

  lint:
    name: lint
    needs: check
    strategy:
      fail-fast: false
      matrix:
        version: [ 'macos-latest', 'ubuntu-latest', 'windows-latest']
        cargo-cmd:
          - fmt --all -- --check
          - clippy --all-targets --all-features -- -D warnings
    runs-on: ${{ matrix.version }}
    steps:
      - uses: actions/checkout@v3
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v1
      - run: cargo ${{ matrix['cargo-cmd'] }}

  tests:
    name: test
    needs: check
    strategy:
      fail-fast: false
      matrix:
        version: [ 'macos-latest', 'ubuntu-latest', 'windows-latest']
        rust: [ nightly, stable ]
    runs-on: ${{ matrix.version }}
    continue-on-error: ${{ matrix.rust == 'nightly' }}
    steps:
      - uses: actions/checkout@v3
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          default: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - name: git test setup preparation
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
#      - name: Install SSH key
#        uses: shimataro/ssh-key-action@v2
#        with:
#          key: ${{ secrets.CI_SSH_PRIVATE_KEY_TESTING }}
#          # figured by `ssh-keyscan github.com`
#          known_hosts: ${{ secrets.KNOWN_HOSTS }}
#          if_key_exists: replace # replace / ignore / fail; optional (defaults to fail)
      - name: cargo test
        run: cargo test --all --locked
      - name: smoke tests
        run: |
          cargo run -- --version
          cargo run -- --help

  audit:
    name: security audit
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - name: audit
        uses: actions-rs/audit-check@v1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  publish-dry-run:
    name: publish dry run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - run: cargo publish --dry-run

  docs:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - name: check documentation
        env:
          RUSTDOCFLAGS: -D warnings
        run: cargo doc --no-deps --all-features
